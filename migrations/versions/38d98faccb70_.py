"""empty message

Revision ID: 38d98faccb70
Revises: 6844b7986ca2
Create Date: 2023-07-01 16:01:52.868032

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "38d98faccb70"
down_revision = "6844b7986ca2"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=128), nullable=False),
        sa.Column("username", sa.String(length=32), nullable=True),
        sa.Column("first_name", sa.String(length=128), nullable=True),
        sa.Column("last_name", sa.String(length=128), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_band", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.drop_table("userss")
    with op.batch_alter_table("match_profile", schema=None) as batch_op:
        batch_op.drop_constraint("match_profile_user_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])

    with op.batch_alter_table("message", schema=None) as batch_op:
        batch_op.drop_constraint("message_sender_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(None, "users", ["sender_id"], ["id"])

    with op.batch_alter_table("user_band", schema=None) as batch_op:
        batch_op.drop_constraint("user_band_user_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])

    with op.batch_alter_table("user_goal", schema=None) as batch_op:
        batch_op.drop_constraint("user_goal_user_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])

    with op.batch_alter_table("user_instrument", schema=None) as batch_op:
        batch_op.drop_constraint("user_instrument_user_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])

    with op.batch_alter_table("user_match", schema=None) as batch_op:
        batch_op.drop_constraint("user_match_user_id_fkey", type_="foreignkey")
        batch_op.drop_constraint("user_match_match_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])
        batch_op.create_foreign_key(None, "users", ["match_id"], ["id"])

    with op.batch_alter_table("user_message_group", schema=None) as batch_op:
        batch_op.drop_constraint("user_message_group_user_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])

    with op.batch_alter_table("user_musical_interest", schema=None) as batch_op:
        batch_op.drop_constraint(
            "user_musical_interest_user_id_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_musical_interest", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "user_musical_interest_user_id_fkey", "userss", ["user_id"], ["id"]
        )

    with op.batch_alter_table("user_message_group", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "user_message_group_user_id_fkey", "userss", ["user_id"], ["id"]
        )

    with op.batch_alter_table("user_match", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "user_match_match_id_fkey", "userss", ["match_id"], ["id"]
        )
        batch_op.create_foreign_key(
            "user_match_user_id_fkey", "userss", ["user_id"], ["id"]
        )

    with op.batch_alter_table("user_instrument", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "user_instrument_user_id_fkey", "userss", ["user_id"], ["id"]
        )

    with op.batch_alter_table("user_goal", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "user_goal_user_id_fkey", "userss", ["user_id"], ["id"]
        )

    with op.batch_alter_table("user_band", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "user_band_user_id_fkey", "userss", ["user_id"], ["id"]
        )

    with op.batch_alter_table("message", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "message_sender_id_fkey", "userss", ["sender_id"], ["id"]
        )

    with op.batch_alter_table("match_profile", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "match_profile_user_id_fkey", "userss", ["user_id"], ["id"]
        )

    op.create_table(
        "userss",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email", sa.VARCHAR(length=128), autoincrement=False, nullable=False),
        sa.Column(
            "username", sa.VARCHAR(length=32), autoincrement=False, nullable=True
        ),
        sa.Column(
            "first_name", sa.VARCHAR(length=128), autoincrement=False, nullable=True
        ),
        sa.Column(
            "last_name", sa.VARCHAR(length=128), autoincrement=False, nullable=True
        ),
        sa.Column("is_admin", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("is_band", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
        sa.UniqueConstraint("email", name="user_email_key"),
        sa.UniqueConstraint("username", name="user_username_key"),
    )
    op.drop_table("users")
    # ### end Alembic commands ###
